install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
biketown.2018.trips <- read.csv("~/Documents/DataScienceClass/ds19-class/data/biketown-2018-trips.csv")
View(biketown.2018.trips)
.
biketown <- read.csv("data/biketown-2018-trips.csv")
View(biketown.2018.trips)
View(biketown)
str(biketown)
summary(biketown)
gapminder_data <- read.csv("~/Documents/DataScienceClass/ds19-class/data/gapminder_data.csv")
View(gapminder_data)
str(gapminder_data)
summary(gapminder_data)
ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point()
ggplot(data = gapminder_data, mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point()
View(biketown)
str(biketown)
summary(biketown)
library(lubridate)
biketown$hour <-
hms(biketown$StartTime) %>%
hour()
summary(biketown)
table(biketown$hour)
freq_by_hour <- table(biketown$hour)
barplot(freq_by_hour)
hist(biketown$hour)
hist(biketown$hour, breaks = seq(0, 24, 3))
# focus on AM peak
am_peak <- subset(biketown, hour >= 7 & hour < 10)
hist(am_peak$hour, breaks = seq(0, 24, 3))
hist(am_peak$hour, breaks = seq(0, 24, 1))
View(am_peak)
View(am_peak)
hist(am_peak$hour, breaks = seq(7, 10, 1.5))
hist(am_peak$hour, breaks = seq(7, 10, 2))
hist(am_peak$hour, breaks = seq(7, 10, 1.5))
hist(am_peak$hour, breaks = seq(7, 10, 1))
# focus on AM peak
am_peak <- subset(biketown, hour >= 7 & hour <= 10)
hist(am_peak$hour, breaks = seq(7, 10, 1))
barplot(freq_by_hour)
hist(am_peak$hour, breaks = seq(7, 10, 1))
barplot(table(am_peak$hour))
# focus on AM peak
am_peak <- subset(biketown, hour >= 7 & hour < 10)
barplot(table(am_peak$hour))
# month
freq_by_month <- table(biketown$month))
# month
freq_by_month <- table(biketown$month)
barplot(freq_by_month)
biketown$month <-
mdy(biketown$StartDate) %>%
month (label = T, abbr = T)
# month
freq_by_month <- table(biketown$month)
barplot(freq_by_month)
View(biketown.2018.trips)
# looking by station
freq_by_station <- table(biketown$StartHub)
freq_by_station
# top 25 stations
s <- sort(freq_by_station, decreasing = T)
s
# sort by #, decreasing order, top 25 stations
s <- sort(freq_by_station, decreasing = T)[1:25]
dotchart(s)
# intro to dplyr
library(dplyr)
library(dplyr)
library(sf)
library(mapview)
biketown <- read.csv("data/biketown-2018-trips.csv",
stringsAsFactors = F)
head(biketown)
hubs_start_sf <- biketown %>%
group_by(StartHub) %>%
summarise(lat = mean(StartLatitude), lng = mean(StartLongitude),
starts = n()) %>%
filter(!is.na(lat)) %>%
st_as_sf(coords = c("lng", "lat"),
crs = 4326, agr = "constant")
View(hubs_start_sf)
mapview(hubs_start_sf, zcol = "starts") # if basemap won't load in RStudio
mapview(hubs_start_sf, cex = "starts", legend = T)
mapview(hubs_start_sf, zcol = "starts", cex = "starts")
hubs_end <- biketown %>%
group_by(EndHub) %>%
summarise(lat = mean(EndLatitude), lng = mean(EndLongitude),
ends = n())
hubs_end_sf <- hubs_end %>%
filter(!is.na(lat)) %>%
st_as_sf(coords = c("lng", "lat"),
crs = 4326, agr = "constant")
mapview(hubs_end_sf, zcol = "ends", cex = "ends")
hubs_ratio_sf <- inner_join(hubs_start_sf, hubs_end,
by = c("StartHub" = "EndHub")) %>%
mutate(starts_to_ends = starts / ends, ends_to_starts = ends / starts)
summary(hubs_ratio_sf)
mapview(hubs_ratio_sf, zcol = "starts_to_ends", cex = "starts_to_ends")
mapview(hubs_ratio_sf, zcol = "ends_to_starts", cex = "ends_to_starts")
m1 <- mapview(hubs_ratio_sf, zcol = "starts_to_ends",
cex = "starts_to_ends", legend = F)
m2 <- mapview(hubs_ratio_sf, zcol = "ends_to_starts",
cex = "ends_to_starts", legend = F)
sync(m1, m2)
View(m1)
View(m2)
View(hubs_start_sf)
View(hubs_end_sf)
View(hubs_end)
View(hubs_end_sf)
`KF&OAK2008.2018rawpm25data` <- read.csv("~/Documents/DataScienceClass/ds19-class/data/KF&OAK2008-2018rawpm25data.csv")
View(`KF&OAK2008.2018rawpm25data`)
# playing with PM data
PM25 <- read.csv("ds19-class\data\KF&OAK2008.2018rawpm25data.csv")
# playing with PM data
PM25 <- read.csv("ds19-class/data/KF&OAK2008.2018rawpm25data.csv")
# playing with PM data
PM25 <- read.csv("data\KF&OAK2008.2018rawpm25data.csv")
# playing with PM data
PM25 <- read.csv("data/KF&OAK2008.2018rawpm25data.csv")
# playing with PM data
PM25 <- read.csv("ds19-class/data/KF&OAK2008.2018rawpm25data.csv")
View(`KF&OAK2008.2018rawpm25data`)
# playing with PM data
PM25 <- KF&OAK2008.2018rawpm25data
View(`KF&OAK2008.2018rawpm25data`)
View(`KF&OAK2008.2018rawpm25data`)
rawpm25data <- read.csv("~/Documents/DataScienceClass/ds19-class/data/rawpm25data.csv")
View(rawpm25data)
# playing with PM data
PM25 <- rawpm25data
View(PM25)
summary_plot <- PM25 %>%
ggplot(aes(x = Date, y = FinePM)) +
geom_point(stat = "identity") +
theme_bw()
summary_plot <- PM25 %>%
ggplot(aes(x = Date, y = FinePM)) +
geom_point(stat = "identity") +
theme_bw()
# playing with PM data
library(ggplot2)
summary_plot <- PM25 %>%
ggplot(aes(x = Date, y = FinePM)) +
geom_point(stat = "identity") +
theme_bw()
summary_plot <- ggplot(aes(x = Date, y = FinePM)) +
geom_point(stat = "identity") +
theme_bw()
p <- ggplot(PM25, aes(x=Date, y=FinePM,
group = Monitor,
color = MOnitor))
library(lubridate)
View(summary_plot)
View(PM25)
PM25 <- rawpm25data %>%
mutate(date_l = mdy(Date))
PM25 <- rawpm25data %>%
mutate(date_l = mdy(Date), day=day(date_l))
str(PM25)
PM25 <- PM25 %>%
separate(date, c("day", "month", "year"), sep = "/")
library(tidyr)
PM25 <- PM25 %>%
separate(date, c("day", "month", "year"), sep = "/")
PM25 <- PM25 %>%
separate(Date, c("day", "month", "year"), sep = "/")
PM25 <- rawpm25data %>%
mutate(date_l = mdy(Date), day=day(date_l))
PM25 <- PM25 %>%
separate(Date, c("day", "month", "year"), sep = "/") %>%
unite(month_day, c("month", "day"), sep = "-")
PM25 <- rawpm25data %>%
mutate(date_l = mdy(Date), day=day(date_l))
PM25 <- PM25 %>%
separate(Date, c("month", "day", "year"), sep = "/") %>%
unite(month_day, c("month", "day"), sep = "-")
test_fig <- PM25 %>%
ggplot(aes(x = month_day, y = FinePM, color = year)) +
geom_point() +
geom_line() +
facet_grid(Monitor ~ .)
test_fig
install.packages("scales")
install.packages("scales")
library(scales)
install.packages("scales")
install.packages("scales")
library(scales)
test_fig + scale_x_date(labels = date_format("%m/%d")) +
theme(axis.text.x = element_text(angle=45))
test_fig + scale_x_date(labels = date_format("Date")) +
theme(axis.text.x = element_text(angle=45))
test_fig
test_fig <- PM25 %>%
ggplot(aes(x = month_day, y = FinePM, color = year)) +
geom_point() +
geom_line() +
facet_grid(Monitor ~ .)
test_fig + scale_x_date(labels = date_format("Date")) +
theme(axis.text.x = element_text(angle=45))
test_fig
test_fig <- PM25 %>%
ggplot(aes(x = month_day, y = FinePM, color = year)) +
geom_point() +
geom_line() +
facet_grid(Monitor ~ .)
test_fig
test_fig <- PM25 %>%
ggplot(aes(x = month_day, y = FinePM, color = year)) +
geom_point() +
geom_line() +
facet_grid(Monitor ~ .)
test_fig
library(tidyr)
test_fig <- PM25 %>%
ggplot(aes(x = month_day, y = FinePM, color = year)) +
geom_point() +
geom_line() +
facet_grid(Monitor ~ .)
test_fig
# playing with PM data
library(ggplot2)
library(lubridate)
library(tidyr)
PM25 <- rawpm25data %>%
mutate(date_l = mdy(Date), day=day(date_l))
p <- ggplot(PM25, aes(x=Date, y=FinePM,
group = Monitor,
color = MOnitor))
theme_bw()
PM25 <- PM25 %>%
separate(Date, c("month", "day", "year"), sep = "/") %>%
unite(month_day, c("month", "day"), sep = "-")
test_fig <- PM25 %>%
ggplot(aes(x = month_day, y = FinePM, color = year)) +
geom_point() +
geom_line() +
facet_grid(Monitor ~ .)
test_fig
far_to_kelvin(0)
# Fahrenheit to Kelvin
far_to_kelvin <- function(temp) { # far_to_kelvin is a function of temp
kelvin <- ((temp-32)*(5/9)) + 273.15  # defines formula for kelvin
return(kelvin)                  # retuns the value of kelvin
}
far_to_kelvin(0)
kelvin <- ((temp-32)/1.800 + 273.15  # defines formula for kelvin
return(kelvin)                  # retuns the value of kelvin
}
far_to_kelvin(0)
# Fahrenheit to Kelvin
far_to_kelvin <- function(temp) { # far_to_kelvin is a function of temp
return(kelvin)                  # retuns the value of kelvin
}
far_to_kelvin(0)
kelvin <- ((temp-32)/1.800 + 273.15
return(kelvin)
}
far_to_kelvin(0)
kelvin <- ((temp-32)*(5/9)) + 273.15
return(kelvin)
# Fahrenheit to Kelvin
far_to_kelvin <- function(temp) {
kelvin <- ((temp-32)*(5/9)) + 273.15
return(kelvin)
}
far_to_kelvin(0)
return(Celcius)
# Convert Kelvin to C
Kelvin_to_Celsius <- function(temp {
Celsius <- temp - 273.15
return(Celsius)
})
# Convert Kelvin to C
Kelvin_to_Celsius <- function(temp) {
Celsius <- temp - 273.15
return(Celsius)
}
Kelvin_to_Celsius(0)
